<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="ComboBoxInputEditable" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
    </Style>
    <Style x:Key="ComboBoxInputNotEditable" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="IsEnabled" Value="False"/>
    </Style>
    <!-- Стили для ComboBoxItem с эффектом серого выделения при наведении -->
    <Style x:Key="ComboBoxItem.Base" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="5,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <!-- Добавлено -->
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Stretch"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D3D3D3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль для ToggleButton (для стрелочки в ComboBox) -->
    <Style x:Key="ComboBoxBaseToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" Background="{StaticResource ToggleButton.Border.Background}" BorderBrush="{StaticResource ToggleButton.Border.BorderBrush}" BorderThickness="0" CornerRadius="8" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderBrush="{StaticResource ToggleButton.Border.BorderBrush}" BorderThickness="0" HorizontalAlignment="Right" SnapsToDevicePixels="true" Cursor="Hand" Width="32">
                            <Label x:Name="arrow" Content="&#xE70D;" FontSize="15" FontFamily="Segoe Fluent Icons" Foreground="{StaticResource ToggleButton.Label.Foreground}" HorizontalAlignment="Center" Margin="0" Padding="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D3D3D3"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <Border CornerRadius="8" Background="#D9D9D9">
                <Popup x:Name="PART_Popup" AllowsTransparency="true"
                    Grid.ColumnSpan="2"
                    IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Border CornerRadius="8" x:Name="dropDownBorder" Background="#D9D9D9" 
                        BorderBrush="Gray" BorderThickness="0.5"
                        Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                        <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Hidden">
                            <Border CornerRadius="5" MaxHeight="160">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Border x:Name="opaqueRect" CornerRadius="8" 
                                        Background="{Binding Background, ElementName=dropDownBorder}" 
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Border>
            <ToggleButton x:Name="toggleButton" Background="{StaticResource Border.Background}" BorderBrush="{StaticResource Border.BorderBrush}" BorderThickness="0" Margin="0" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxBaseToggleButton}"/>
            <Border x:Name="border" CornerRadius="8" Background="{StaticResource Border.Background}" Margin="0">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" FontFamily="Noah" Style="{DynamicResource ComboBoxInputEditable}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ComboBox.Focused.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxNotEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <Border CornerRadius="8" Background="#D9D9D9">
                <Popup x:Name="PART_Popup" AllowsTransparency="true"
                Grid.ColumnSpan="2"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Border CornerRadius="8" x:Name="dropDownBorder" Background="#D9D9D9" 
                    BorderBrush="Gray" BorderThickness="0.5"
                    Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                        <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Hidden">
                            <Border CornerRadius="5" MaxHeight="160">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Border x:Name="opaqueRect" CornerRadius="8" 
                                    Background="{Binding Background, ElementName=dropDownBorder}" 
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Border>
            <ToggleButton x:Name="toggleButton" Background="{StaticResource Border.Background}" BorderBrush="{StaticResource Border.BorderBrush}" BorderThickness="0" Margin="0" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxBaseToggleButton}"/>
            <Border x:Name="border" CornerRadius="8" Background="{StaticResource Border.Background}" Margin="0">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" FontFamily="Noah" Style="{DynamicResource ComboBoxInputNotEditable}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ComboBox.Focused.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="NotEditableComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource ComboBox.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.BorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ComboBox.Foreground}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontFamily" Value="Noah"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="245"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItem.Base}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxNotEditableTemplate}"/>
    </Style>

    <!-- Стиль для редактируемого комбобокса -->
    <Style x:Key="EditableComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource ComboBox.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.BorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ComboBox.Foreground}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontFamily" Value="Noah"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="245"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItem.Base}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
    </Style>

    <!-- Шаблон для редактируемого ComboBox -->
    

</ResourceDictionary>
