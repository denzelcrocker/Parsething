<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Style x:Key="ComboBoxInputEditable" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="Foreground" Value="{DynamicResource MainComboBoxTextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource MainComboBoxBackgroundBrush}"/>
    </Style>
    <Style x:Key="ComboBoxInputNotEditable" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="Foreground" Value="{DynamicResource MainComboBoxTextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource MainComboBoxBackgroundBrush}"/>
    </Style>
    <Style x:Key="ComponentCalculationHeaderInputEditable" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="Foreground" Value="{DynamicResource ComponentCalculationHeaderComboBoxTextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ComponentCalculationHeaderComboBoxBackgroundBrush}"/>
    </Style>
    <Style x:Key="InfoComboBoxInputNotEditable" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="Foreground" Value="{DynamicResource MainComboBoxTextBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style x:Key="MainComboBoxItem.Base" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="5,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource MainComboBoxTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Stretch"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MainComboBoxBackgroundHoverButtonBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxItem.ComponentCalculationHeader" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="5,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ComponentCalculationHeaderComboBoxTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ComponentCalculationHeaderComboBoxBackgroundHoverButtonBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MainComboBoxBaseToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" Background="{DynamicResource MainComboBoxBackgroundBrush}" BorderBrush="{DynamicResource MainComboBoxBackgroundBrush}" BorderThickness="0" CornerRadius="8" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderBrush="{DynamicResource MainComboBoxBackgroundBrush}" BorderThickness="0" HorizontalAlignment="Right" SnapsToDevicePixels="true" Cursor="Hand" Width="32">
                            <Label x:Name="arrow" Content="&#xE70D;" FontSize="15" FontFamily="Segoe Fluent Icons" Foreground="{DynamicResource MainComboBoxTextBrush}" HorizontalAlignment="Center" Margin="0" Padding="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MainComboBoxBackgroundHoverButtonBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComponentCalculationHeaderComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" Background="{DynamicResource ComponentCalculationHeaderComboBoxBackgroundBrush}" BorderBrush="{DynamicResource ComponentCalculationHeaderComboBoxBorderBrush}" BorderThickness="0" CornerRadius="8" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderBrush="{DynamicResource ComponentCalculationHeaderComboBoxBorderBrush}" BorderThickness="0" HorizontalAlignment="Right" SnapsToDevicePixels="true" Cursor="Hand" Width="32">
                            <Label x:Name="arrow" Content="&#xE70D;" FontSize="15" FontFamily="Segoe Fluent Icons" Foreground="{DynamicResource ComponentCalculationHeaderComboBoxTextBrush}" HorizontalAlignment="Center" Margin="0" Padding="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ComponentCalculationHeaderComboBoxBackgroundHoverButtonBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="MainComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <Border CornerRadius="8" Background="{DynamicResource MainComboBoxBackgroundBrush}">
                <Popup x:Name="PART_Popup" AllowsTransparency="true"
                    Grid.ColumnSpan="2"
                    IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Border CornerRadius="8" x:Name="dropDownBorder" Background="{DynamicResource MainComboBoxBackgroundBrush}" 
                        BorderBrush="{DynamicResource MainComboBoxBorderBrush}" BorderThickness="0.5"
                        Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                        <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Hidden">
                            <Border CornerRadius="5" MaxHeight="160">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Border x:Name="opaqueRect" CornerRadius="8" 
                                        Background="{Binding Background, ElementName=dropDownBorder}" 
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Border>
            <ToggleButton x:Name="toggleButton" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="0" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource MainComboBoxBaseToggleButton}"/>
            <Border x:Name="border" CornerRadius="8" Background="Transparent" Margin="0">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" FontFamily="Noah" Style="{DynamicResource ComboBoxInputEditable}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ComboBox.Focused.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComponentCalculationsHeaderComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <Border CornerRadius="8" Background="{DynamicResource ComponentCalculationHeaderComboBoxBackgroundBrush}">
                <Popup x:Name="PART_Popup" AllowsTransparency="true"
                Grid.ColumnSpan="2"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Border CornerRadius="8" x:Name="dropDownBorder" Background="{DynamicResource ComponentCalculationHeaderComboBoxBackgroundBrush}" 
                    BorderBrush="{DynamicResource ComponentCalculationHeaderComboBoxBorderBrush}" BorderThickness="0.5"
                    Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                        <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Hidden">
                            <Border CornerRadius="5" MaxHeight="160">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Border x:Name="opaqueRect" CornerRadius="8" 
                                    Background="{Binding Background, ElementName=dropDownBorder}" 
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Border>
            <ToggleButton x:Name="toggleButton" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="0" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComponentCalculationHeaderComboBoxToggleButton}"/>
            <Border x:Name="border" CornerRadius="8" Background="Transparent" Margin="0">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" FontFamily="Noah" Style="{DynamicResource ComponentCalculationHeaderInputEditable}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ComboBox.Focused.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MainComboBoxNotEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <Border CornerRadius="8" Background="{DynamicResource MainComboBoxBackgroundBrush}">
                <Popup x:Name="PART_Popup" AllowsTransparency="true"
                Grid.ColumnSpan="2"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Border CornerRadius="8" x:Name="dropDownBorder" Background="{DynamicResource MainComboBoxBackgroundBrush}" 
                    BorderBrush="{DynamicResource MainComboBoxBorderBrush}" BorderThickness="1"
                    Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                        <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Hidden">
                            <Border CornerRadius="5" MaxHeight="160">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Border x:Name="opaqueRect" CornerRadius="8" 
                                    Background="{Binding Background, ElementName=dropDownBorder}" 
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Border>
            <ToggleButton x:Name="toggleButton" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="0" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource MainComboBoxBaseToggleButton}"/>
            <Border x:Name="border" CornerRadius="8" Background="Transparent" Margin="0">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" FontFamily="Noah" Style="{DynamicResource ComboBoxInputNotEditable}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ComboBox.Focused.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="NotEditableMainComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontFamily" Value="Noah"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource MainComboBoxItem.Base}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource MainComboBoxNotEditableTemplate}"/>
    </Style>

    <Style x:Key="EditableMainComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontFamily" Value="Noah"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource MainComboBoxItem.Base}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource MainComboBoxEditableTemplate}"/>
    </Style>

    <Style x:Key="EditableComponentCalculationsHeaderComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource EditableMainComboBox}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItem.ComponentCalculationHeader}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource ComponentCalculationsHeaderComboBoxEditableTemplate}"/>
    </Style>

    <Style x:Key="ProfileComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <Label x:Name="arrow" Content="&#xEB11;" Style="{DynamicResource Icon}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ProfileComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition  Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" VerticalOffset="16" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <theme:SystemDropShadowChrome.Effect>
                        <DropShadowEffect BlurRadius="20" ShadowDepth="3" Direction="315" Opacity="0.2"/>
                    </theme:SystemDropShadowChrome.Effect>
                    <Border Background="{DynamicResource ProfileComboBoxBackgroundBrush}" CornerRadius="10" Margin="0,5,50,0">
                        <Border x:Name="dropDownBorder" Background="#0000" CornerRadius="10" BorderBrush="{DynamicResource SeparatorBrush}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ProfileComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
    </ControlTemplate>
    
    <Style x:Key="ProfileComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ProfileComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ProfileComboBoxTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="8,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ProfileComboBoxItem}"/>
        <Setter Property="Template" Value="{StaticResource ProfileComboBoxTemplate}"/>
    </Style>

    <Style x:Key="InfoComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <Label x:Name="arrow" Content="&#xE70D;" FontSize="20" FontFamily="Segoe Fluent Icons" Foreground="{DynamicResource MainComboBoxTextBrush}" HorizontalAlignment="Center" Margin="0" Padding="0" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="InfoComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>

            <!-- Поле для ввода текста -->
            <TextBox x:Name="PART_EditableTextBox"
                 Grid.ColumnSpan="2"
                     FontSize="20"
                 Style="{DynamicResource InfoComboBoxInputNotEditable}"
                 HorizontalAlignment="Stretch"
                 VerticalAlignment="Center"
                 IsReadOnly="{TemplateBinding IsReadOnly}"/>

            <!-- Кнопка открытия списка -->
            <ToggleButton x:Name="toggleButton"
                      Grid.Column="1"
                      Style="{StaticResource InfoComboBoxToggleButton}"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

            <!-- Выпадающий список -->
            <Popup x:Name="PART_Popup"
               AllowsTransparency="true"
               Grid.ColumnSpan="2"
               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
               Placement="Bottom"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow"
                                          MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border Background="{DynamicResource MainComboBoxBackgroundBrush}"
                        CornerRadius="8"
                        BorderBrush="{DynamicResource SeparatorBrush}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <ItemsPresenter x:Name="ItemsPresenter"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
        </Grid>
    </ControlTemplate>
    <Style x:Key="InfoComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="5,10"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource MainComboBoxTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Stretch"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MainComboBoxBackgroundHoverButtonBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="InfoComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainComboBoxTextBrush}"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="10,10,10,10"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource InfoComboBoxTemplate}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource InfoComboBoxItem}"/>
    </Style>
</ResourceDictionary>
